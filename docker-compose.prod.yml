services:
  app:
    build:
      context: '.'
      dockerfile: docker/production/Dockerfile
      target: production
    image: 'optimizer-app:production'
    container_name: optimizer-app
    restart: unless-stopped
    environment:
      # Core Laravel Configuration
      - APP_NAME=${APP_NAME:-Optimizer}
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_KEY=${APP_KEY}
      - APP_URL=${APP_URL:-http://localhost}
      
      # Logging
      - LOG_CHANNEL=stack
      - LOG_LEVEL=${LOG_LEVEL:-info}
      
      # Database Configuration  
      - DB_CONNECTION=mysql
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      
      # Cache & Queue Configuration
      - CACHE_DRIVER=database
      - QUEUE_CONNECTION=database
      - SESSION_DRIVER=database
      - SESSION_LIFETIME=120
      - BROADCAST_DRIVER=log
    networks:
      - optimizer-network
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: 'mysql/mysql-server:8.0'
    container_name: optimizer-mysql
    restart: unless-stopped
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 0
    volumes:
      - 'mysql-data:/var/lib/mysql'
    networks:
      - optimizer-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      retries: 3
      timeout: 5s
      interval: 30s

  nginx:
    image: 'nginx:alpine'
    container_name: optimizer-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - './docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
      - '/etc/nginx/ssl:/etc/nginx/ssl:ro'
    networks:
      - optimizer-network
    depends_on:
      - app

networks:
  optimizer-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  app-cache:
    driver: local 