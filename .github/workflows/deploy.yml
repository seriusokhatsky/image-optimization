name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      skip_confirmation:
        description: 'Skip deployment confirmation'
        required: false
        default: false
        type: boolean

jobs:
  deploy:
    name: Deploy to Production Server
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan -H ${{ secrets.PRODUCTION_HOST }} >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
        
    - name: Deploy to Production
      run: |
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{ secrets.PRODUCTION_USER }}@${{ secrets.PRODUCTION_HOST }} << 'ENDSSH'
          set -e
          cd /var/www/optimizer
          
          echo "🔄 Updating code..."
          git fetch origin
          git checkout main
          git pull origin main
          
          echo "🏗️ Building new Docker image with cache busting..."
          BUILD_TIMESTAMP=$(date +%s)
          GIT_COMMIT=$(git rev-parse HEAD)
          
          docker build \
              --target production \
              --build-arg BUILD_TIMESTAMP=$BUILD_TIMESTAMP \
              --build-arg CACHEBUST=$GIT_COMMIT \
              -t optimizer-app:production \
              -f docker/production/Dockerfile \
              .
          
          echo "🔧 Skipping maintenance mode (can cause hangs)..."
          
          echo "🚀 Deploying new containers..."
          docker compose -f docker-compose.prod.yml up -d --no-deps app
          echo "✅ Container deployment completed"
          
          echo "📦 Running Laravel maintenance tasks..."
          docker compose -f docker-compose.prod.yml exec -T app php artisan migrate --force
          docker compose -f docker-compose.prod.yml exec -T app php artisan optimize:clear
          docker compose -f docker-compose.prod.yml exec -T app php artisan config:cache
          docker compose -f docker-compose.prod.yml exec -T app php artisan route:cache
          docker compose -f docker-compose.prod.yml exec -T app php artisan view:cache
          
          echo "✅ Disabling maintenance mode..."
          docker compose -f docker-compose.prod.yml exec -T app php artisan up
          
          echo "🔍 Verifying deployment..."
          docker compose -f docker-compose.prod.yml ps
          
          echo "🌐 Testing application..."
          docker compose -f docker-compose.prod.yml exec -T app curl -f -s -I http://localhost && echo "✅ Local test passed"
          
          echo "🌍 Testing external access..."
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://img-optim.xtemos.com/)
          echo "External response: HTTP $HTTP_CODE"
          
          if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "301" ] || [ "$HTTP_CODE" = "302" ]; then
            echo "✅ External test passed"
          else
            echo "⚠️ External test returned HTTP $HTTP_CODE"
            exit 1
          fi
          
          echo "✅ Deployment completed successfully!"
        ENDSSH
        
    - name: Deployment Summary
      run: |
        echo "🎉 Production deployment completed!"
        echo "🌐 Application URL: https://img-optim.xtemos.com"
        echo "📝 Commit: ${{ github.sha }}"
        echo "👤 Deployed by: ${{ github.actor }}" 